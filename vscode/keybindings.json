// Place your key bindings in this file to override the defaultsauto[]
[
    // Ctrl+a/ctrl+e to go to begin/end of line.
    {
        "key": "ctrl+a",
        "command": "-cursorLineStart",
        "when": "textInputFocus"
    },
    {
        "key": "ctrl+a",
        "command": "cursorHome",
        "when": "textInputFocus"
    },
    {
        "key": "ctrl+e",
        "command": "cursorEnd",
        "when": "textInputFocus"
    },
    {
        "key": "ctrl+e",
        "command": "-cursorLineEnd",
        "when": "textInputFocus"
    },
    // Cmd+num to go to respective tab.
    {
        "key": "cmd+1",
        "command": "workbench.action.openEditorAtIndex1"
    },
    {
        "key": "cmd+2",
        "command": "workbench.action.openEditorAtIndex2"
    },
    {
        "key": "cmd+3",
        "command": "workbench.action.openEditorAtIndex3"
    },
    {
        "key": "cmd+4",
        "command": "workbench.action.openEditorAtIndex4"
    },
    {
        "key": "cmd+5",
        "command": "workbench.action.openEditorAtIndex5"
    },
    {
        "key": "cmd+6",
        "command": "workbench.action.openEditorAtIndex6"
    },
    {
        "key": "cmd+7",
        "command": "workbench.action.openEditorAtIndex7"
    },
    {
        "key": "cmd+8",
        "command": "workbench.action.openEditorAtIndex8"
    },
    {
        "key": "cmd+9",
        "command": "workbench.action.lastEditorInGroup"
    },
    // Ctrl(+shift)+tab to go to next/prev tab.
    {
        "key": "ctrl+tab",
        "command": "workbench.action.nextEditorInGroup"
    },
    {
        "key": "ctrl+tab",
        "command": "-workbench.action.quickOpenNavigateNextInEditorPicker",
        "when": "inEditorsPicker && inQuickOpen"
    },
    {
        "key": "ctrl+tab",
        "command": "-workbench.action.quickOpenPreviousRecentlyUsedEditorInGroup"
    },
    {
        "key": "ctrl+shift+tab",
        "command": "workbench.action.previousEditorInGroup"
    },
    {
        "key": "ctrl+shift+tab",
        "command": "-workbench.action.quickOpenLeastRecentlyUsedEditorInGroup"
    },
    {
        "key": "ctrl+shift+tab",
        "command": "-workbench.action.quickOpenNavigatePreviousInEditorPicker",
        "when": "inEditorsPicker && inQuickOpen"
    },
    // Cmd+shift+f to replace.
    {
        "key": "shift+cmd+f",
        "command": "-workbench.view.search",
        "when": "!searchViewletVisible"
    },
    {
        "key": "shift+cmd+f",
        "command": "-workbench.action.findInFiles"
    },
    {
        "key": "shift+cmd+f",
        "command": "editor.action.startFindReplaceAction",
        "when": "editorFocus || editorIsOpen"
    },
    {
        "key": "alt+cmd+f",
        "command": "-editor.action.startFindReplaceAction",
        "when": "editorFocus || editorIsOpen"
    },
    // Split editor panes.
    {
        "key": "ctrl+w v",
        "command": "workbench.action.splitEditor"
    },
    {
        "key": "ctrl+w s",
        "command": "workbench.action.splitEditorOrthogonal"
    },
    {
        "key": "ctrl+shift+j",
        "command": "workbench.action.splitEditorDown",
        "when": "editorFocus"
    },
    {
        "key": "ctrl+shift+h",
        "command": "workbench.action.splitEditorLeft",
        "when": "editorFocus"
    },
    {
        "key": "ctrl+shift+l",
        "command": "workbench.action.splitEditorRight",
        "when": "editorFocus"
    },
    {
        "key": "ctrl+shift+k",
        "command": "workbench.action.splitEditorUp",
        "when": "editorFocus"
    },
    {
        "key": "alt+cmd+1",
        "command": "workbench.action.editorLayoutSingle",
    },
    {
        "key": "alt+cmd+2",
        "command": "workbench.action.editorLayoutTwoColumns"
    },
    {
        "key": "alt+cmd+3",
        "command": "workbench.action.editorLayoutThreeColumns"
    },
    // Navigate editor panes.
    {
        "key": "ctrl+h",
        "command": "workbench.action.focusLeftGroup",
        "when": "editorFocus"
    },
    {
        "key": "ctrl+l",
        "command": "workbench.action.focusRightGroup",
        "when": "editorFocus"
    },
    {
        "key": "ctrl+j",
        "command": "workbench.action.focusBelowGroup",
        "when": "editorFocus"
    },
    {
        "key": "ctrl+j",
        "command": "-extension.vim_ctrl+j",
        "when": "editorTextFocus && vim.active && vim.use<C-j> && !inDebugRepl"
    },
    {
        "key": "ctrl+j",
        "command": "-editor.action.joinLines",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "ctrl+k",
        "command": "workbench.action.focusAboveGroup",
        "when": "editorFocus"
    },
    {
        "key": "ctrl+k",
        "command": "-extension.vim_ctrl+k",
        "when": "editorTextFocus && vim.active && vim.use<C-k> && !inDebugRepl"
    },
    {
        "key": "ctrl+k",
        "command": "-deleteAllRight",
        "when": "textInputFocus && !editorReadonly"
    }
]
